name: Build and Push api
on:
  push:
    branches:
      - main
      - develop
    paths:
      - "api/**"
      - ".github/workflows/build-push-api.yaml"
      - "!**.md"
  pull_request:
    types: ["opened", "reopened", "synchronize", "ready_for_review"]
    branches:
      - develop
      - main
jobs:
  backend-tests:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >
          --health-cmd="pg_isready -U test_user" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 5
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Backend Dependencies
      run: go mod tidy
      working-directory: ./api

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          pg_isready -h localhost -p 5432 -U test_user && break
          sleep 3
        done
    - name: Install Dependencies
      run: |
        go mod tidy
        go mod vendor
    - name: Run Backend Tests
      env:
        POSTGRES_USER: test_user
        POSTGRES_PASSWORD: test_password
        POSTGRES_DB: test_db
        POSTGRES_HOST: localhost
      run: go test ./... -v
      working-directory: ./api
  build:
    name: Build and Push Image
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        timeout-minutes: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        timeout-minutes: 2

      - name: Create Tag
        id: tag
        run: echo "tag=${{ github.ref_name }}-$(git rev-parse --short HEAD)-$(date +%s)" >> $GITHUB_OUTPUT
        timeout-minutes: 2

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_ECR_REGISTRY }}
          username: ${{ secrets.AWS_ECR_ACCESS_KEY_ID}}
          password: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
        timeout-minutes: 5

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ secrets.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY_API }}:${{ steps.tag.outputs.tag }}
        timeout-minutes: 10

      - name: status of workflow
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.WEBHOOK_URL }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: ""
          SLACK_MESSAGE: "Build workflow run **${{ job.status }}**"
        timeout-minutes: 5
